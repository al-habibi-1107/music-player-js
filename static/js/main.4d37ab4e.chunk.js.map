{"version":3,"sources":["components/player.js","App.js","reportWebVitals.js","index.js"],"names":["Player","useState","isSearched","setIsSearched","autoplay","setAutoplay","isPlaying","setIsPlaying","songID","setSongID","playlist","currentIndex","className","id","placeholder","onClick","link","String","document","querySelector","value","songId","substring","length","console","log","push","prompt","src","alt","title","width","height","frameBorder","allow","allowFullScreen","style","animation","IconButton","aria-label","SkipPrevious","Fab","Pause","PlayArrow","SkipNext","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iTAmJeA,MA1If,WAEI,IAFc,EAIsBC,oBAAS,GAJ/B,mBAIPC,EAJO,KAIKC,EAJL,OAMkBF,mBAAS,GAN3B,mBAMPG,EANO,KAMGC,EANH,OAQoBJ,oBAAS,GAR7B,mBAQPK,EARO,KAQIC,EARJ,OAUcN,mBAAS,IAVvB,mBAUPO,EAVO,KAUCC,EAVD,KAaRC,EAAW,GACbC,GAAgB,EA4FpB,OACI,sBAAKC,UAAU,cAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,GAAG,aAAaC,YAAY,4BACnC,qBAAKC,QAvCjB,WAEI,IAAMC,EAAOC,OAAOC,SAASC,cAAc,eAAeC,OAC1D,GAAa,KAATJ,EAAa,CAEb,IAAMK,EAASL,EAAKM,UAAUN,EAAKO,OAAS,GAAIP,EAAKO,QAErDC,QAAQC,IAAIJ,GAEZX,EAASgB,KAAKL,GAGdG,QAAQC,IAAIf,GACZc,QAAQC,IAAId,IAEU,IAAlBA,GAEAF,EAAUY,GACVV,EAAe,EACfa,QAAQC,IAAId,IAGZgB,OAAO,sBAGQ,IAAfzB,GAEAC,GAAc,KAYkBS,UAAU,OAAOgB,IAAI,+DAA+DC,IAAI,cAE5H,wBAAQC,MAAM,QAAQC,MAAM,IAAIC,OAAO,IAAIJ,IAAG,wCAAmCpB,EAAnC,qBAAsDJ,GAAY6B,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,IAEhP,sBAAKvB,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAUwB,MAAO9B,EAlG/B,CACT+B,UAAW,2BAiGgD,KAAMT,IAAK1B,EAAU,qCAAiCM,EAAjC,UAjHhE,gIAiH+HqB,IAAI,YAC3I,6BAAK3B,EAAa,oBAAsB,4CACxC,sBAAKU,UAAU,cAAf,UACI,cAAC0B,EAAA,EAAD,CAAYC,aAAW,OAAvB,SACI,cAACC,EAAA,EAAD,MAEJ,cAACC,EAAA,EAAD,CAAKF,aAAW,OAAO3B,UAAU,cAAcG,QAlF/D,WACqB,IAAbX,GACAG,GAAa,GACbF,EAAY,KAEZE,GAAa,GACbF,EAAY,KA4EJ,SACKC,EAAY,cAACoC,EAAA,EAAD,IAAY,cAACC,EAAA,EAAD,MAE7B,cAACL,EAAA,EAAD,CAAYC,aAAW,OAAOxB,QAzE9C,WAEIR,GAAa,GACTI,EAAeD,EAASa,OAAS,IACjCZ,IACAF,EAAUC,EAASC,MAoEX,SACI,cAACiC,EAAA,EAAD,gBCzHTC,MARf,WACE,OACC,mCACC,cAAC,EAAD,OCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,SAM1BZ,M","file":"static/js/main.4d37ab4e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Fab, IconButton } from '@material-ui/core';\nimport { PlayArrow, Pause, SkipNext, SkipPrevious } from '@material-ui/icons';\n\n\nimport './player.css'\n\n\n\nfunction Player() {\n\n    const demoSongImg = 'https://9b16f79ca967fd0708d1-2713572fef44aa49ec323e813b06d2d9.ssl.cf2.rackcdn.com/1140x_a10-7_cTC/NS-WKMAG0730-1595944356.jpg'\n\n    const [isSearched, setIsSearched] = useState(false)\n\n    const [autoplay, setAutoplay] = useState(0)\n\n    const [isPlaying, setIsPlaying] = useState(false)\n\n    const [songID, setSongID] = useState(\"\")\n\n\n    const playlist = []\n    var currentIndex = -1;\n\n\n    const play = {\n        animation: 'spin 7s linear infinite'\n    }\n\n\n\n\n\n    // function playSong() {\n\n    //     const song = document.querySelector('#song')\n\n    //     if (isPlaying) {\n    //         song.pause()\n    //         setIsPlaying(false)\n    //     } else {\n    //         song.play()\n    //         setIsPlaying(true)\n    //     }\n\n    // }\n\n    function playSong() {\n        if (autoplay === 0) {\n            setIsPlaying(true)\n            setAutoplay(1)\n        } else {\n            setIsPlaying(false)\n            setAutoplay(0)\n        }\n    }\n\n\n\n    function nextSong() {\n\n        setIsPlaying(false)\n        if (currentIndex < playlist.length - 1) {\n            currentIndex++;\n            setSongID(playlist[currentIndex])\n        }\n    }\n\n    // function prevSong(){\n\n    //     const song = document.querySelector('#song')\n    //     song.load()\n    //     setIsPlaying(false)\n\n    //     if(currentSong>0){\n    //         setCurrentSong((prevValue)=>prevValue-1)\n    //     }\n    // }\n\n    function getSongUsingLink() {\n\n        const link = String(document.querySelector('#user-input').value);\n        if (link !== \"\") {\n\n            const songId = link.substring(link.length - 11, link.length)\n\n            console.log(songId);\n\n            playlist.push(songId)\n\n\n            console.log(playlist);\n            console.log(currentIndex);\n\n            if (currentIndex === -1) {\n\n                setSongID(songId)\n                currentIndex = 0;\n                console.log(currentIndex);\n            }\n            else {\n                prompt(\"Added to Playlist\")\n            }\n\n            if (isSearched === false) {\n\n                setIsSearched(true)\n            }\n        }\n\n    }\n\n\n\n    return (\n        <div className=\"bodyContent\">\n            <div className=\"input-area\">\n                <input id='user-input' placeholder=\"Enter Link to Listen to\"></input>\n                <img onClick={getSongUsingLink} className='icon' src=\"https://www.flaticon.com/svg/static/icons/svg/622/622669.svg\" alt='search' />\n            </div>\n            <iframe title=\"Music\" width=\"0\" height=\"0\" src={`https://www.youtube.com/embed/${songID}?autoplay=${autoplay}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n            <div className=\"PlayerCard\">\n                <img className='songImg' style={isPlaying ? play : null} src={isSearched ? `https://img.youtube.com/vi/${songID}/0.jpg` : demoSongImg} alt='demoImg' />\n                <h1>{isSearched ? \"Currently Playing\" : \"Paste the link of your fav song to play\"}</h1>\n                <div className='motionIcons'>\n                    <IconButton aria-label=\"next\" >\n                        <SkipPrevious />\n                    </IconButton>\n                    <Fab aria-label=\"Play\" className='play-button' onClick={playSong}>\n                        {isPlaying ? <Pause /> : <PlayArrow />}\n                    </Fab>\n                    <IconButton aria-label=\"next\" onClick={nextSong} >\n                        <SkipNext />\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    );\n\n\n}\n\n\n\n\nexport default Player;","import React from 'react'\nimport './App.css';\n\nimport Player from './components/player'\n\nfunction App() {\n  return (\n   <>\n    <Player/>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}